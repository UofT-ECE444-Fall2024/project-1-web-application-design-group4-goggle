version: '3'

services:

  frontend:
    build:
      context: ./frontend/uoftrade
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    volumes:
      - ./frontend/uoftrade:/app
      - /app/node_modules
    command: npm run dev
    env_file:
      - .env

  identity-service:
    build:
      context: ./identity_service
    ports:
      - "12000:12000"
    env_file:
      - ./.env
    depends_on:
      db-identity-service:
        condition: service_healthy
      redis:
        condition: service_started

  db-identity-service:
    image: postgres:13
    environment:
      POSTGRES_DB: identity_db
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_IDENTITY_PASSWORD}
    ports:
      - "10000:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d identity_db -U ${POSTGRES_USER} -p 10000"]
      interval: 1s
      timeout: 1s
      retries: 8
    command: -p 10000

  marketplace-service:
    build:
      context: ./marketplace_service
    ports:
      - "12001:12001"
    env_file:
      - ./.env
    depends_on:
      db-marketplace-service:
        condition: service_healthy
      redis:
        condition: service_started

  db-marketplace-service:
    image: postgres:13
    environment:
      POSTGRES_DB: marketplace_db
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_MARKETPLACE_PASSWORD}
    ports:
      - "10001:10001"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d marketplace_db -U ${POSTGRES_USER} -p 10001"]
      interval: 1s
      timeout: 1s
      retries: 8
    command: -p 10001

  messaging-service:
    build:
      context: ./messaging_service
    ports:
      - "12002:12002"
    env_file:
      - ./.env
    depends_on:
      db-messaging-service:
        condition: service_healthy
      redis:
        condition: service_started

  db-messaging-service:
    image: postgres:13
    environment:
      POSTGRES_DB: messaging_db
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_MESSAGING_PASSWORD}
    ports:
      - "10002:10002"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d messaging_db -U ${POSTGRES_USER} -p 10002"]
      interval: 1s
      timeout: 1s
      retries: 8
    command: -p 10002

  redis:
    image: "redis:latest"
    # command: sh -c "redis-server > redis.out 2>&1"
    ports:
      - "6379:6379"

  nginx:
    build:
      context: ./nginx
    ports:
      - "80:80"
    depends_on:
      - identity-service
      - marketplace-service
      - messaging-service
